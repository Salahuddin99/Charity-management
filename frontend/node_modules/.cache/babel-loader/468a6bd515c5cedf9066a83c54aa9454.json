{"ast":null,"code":"import Axios from 'axios';\nimport { PROJECT_LIST_SUCCESS, PROJECT_LIST_REQUEST, PROJECT_LIST_FAIL, PROJECT_DETAILS_REQUEST, PROJECT_DETAILS_SUCCESS, PROJECT_DETAILS_FAIL, PROJECT_DELETE_FAIL, PROJECT_DELETE_REQUEST, PROJECT_DELETE_SUCCESS, PROJECT_CREATE_FAIL, PROJECT_CREATE_REQUEST, PROJECT_CREATE_SUCCESS, PROJECT_UPDATE_FAIL, PROJECT_UPDATE_REQUEST, PROJECT_UPDATE_SUCCESS // PROJECT_REVIEW_SAVE_REQUEST,\n// PROJECT_REVIEW_SAVE_SUCCESS,\n// PROJECT_REVIEW_SAVE_FAIL,\n} from '../constants/projectConstant';\nexport const listProjects = () => async dispatch => {\n  try {\n    dispatch({\n      type: PROJECT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await Axios.get( // `/api/projects?NGO=${NGO}&keyword=${keyword}&pageNumber=${pageNumber}`\n    `/api/projects`);\n    dispatch({\n      type: PROJECT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PROJECT_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // export const createProject = () => async (dispatch, getState) => {\n//   try {\n//     const {\n//       userLogin: { userInfo },\n//     } = getState()\n//     dispatch({ type: PROJECT_CREATE_REQUEST })\n//     const { data } = await Axios.post(\n//       '/api/projects',\n//       {},\n//       {\n//         headers: {\n//           Authorization: `bearer ${userInfo.token}`,\n//         },\n//       }\n//     )\n//     dispatch({ type: PROJECT_CREATE_SUCCESS, payload: data.project })\n//   } catch (error) {\n//     dispatch({\n//       type: PROJECT_CREATE_FAIL,\n//       payload:\n//         error.response && error.response.data.message\n//           ? error.response.data.message\n//           : error.message,\n//     })\n//   }\n// }\n\nexport const createProject = _ref => {\n  let {\n    name,\n    category,\n    image,\n    images,\n    description,\n    Challenge,\n    Solution,\n    longTermImpact,\n    additionalDocumentation,\n    by,\n    location,\n    donationGoal,\n    companyRegistrationNumber,\n    companyAddress,\n    yearFounded,\n    contactName,\n    telephoneNo,\n    emailAddress,\n    country\n  } = _ref;\n  return async (dispatch, getState) => {\n    try {\n      const {\n        userLogin: {\n          userInfo\n        }\n      } = getState();\n      dispatch({\n        type: PROJECT_CREATE_REQUEST,\n        payload: {\n          name,\n          category,\n          image,\n          images,\n          description,\n          Challenge,\n          Solution,\n          longTermImpact,\n          additionalDocumentation,\n          by,\n          location,\n          donationGoal,\n          companyRegistrationNumber,\n          companyAddress,\n          yearFounded,\n          contactName,\n          telephoneNo,\n          emailAddress,\n          country\n        }\n      });\n      const {\n        data\n      } = await Axios.post('/api/projects/create', {\n        name,\n        category,\n        image,\n        images,\n        description,\n        Challenge,\n        Solution,\n        longTermImpact,\n        additionalDocumentation,\n        by,\n        location,\n        donationGoal,\n        companyRegistrationNumber,\n        companyAddress,\n        yearFounded,\n        contactName,\n        telephoneNo,\n        emailAddress,\n        country\n      }, {\n        headers: {\n          Authorization: `bearer ${userInfo.token}`\n        }\n      });\n      dispatch({\n        type: PROJECT_CREATE_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: PROJECT_CREATE_FAIL,\n        payload: error.response && error.response.data.message ? error.response.data.message : error.message\n      });\n    }\n  };\n}; // export const updateProductReview =\n//   (productId, review) => async (dispatch, getState) => {\n//     try {\n//       const {\n//         userSignin: { userInfo },\n//       } = getState()\n//       dispatch({ type: PROJECT_REVIEW_SAVE_REQUEST })\n//       const { data } = await Axios.post(\n//         `/api/projects/${productId}/reviews`,\n//         review,\n//         {\n//           headers: {\n//             Authorization: `bearer ${userInfo.token}`,\n//           },\n//         }\n//       )\n//       dispatch({ type: PROJECT_REVIEW_SAVE_SUCCESS, payload: data })\n//     } catch (error) {\n//       dispatch({\n//         type: PROJECT_REVIEW_SAVE_FAIL,\n//         payload:\n//           error.response && error.response.data.message\n//             ? error.response.data.message\n//             : error.message,\n//       })\n//     }\n//   }\n\nexport const deleteProject = projectId => async (dispatch, getState) => {\n  try {\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    dispatch({\n      type: PROJECT_DELETE_REQUEST,\n      payload: projectId\n    });\n    const {\n      data\n    } = await Axios.delete(`/api/projects/${projectId}`, {\n      headers: {\n        Authorization: `bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PROJECT_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PROJECT_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const detailsOfProject = projectId => async dispatch => {\n  try {\n    dispatch({\n      type: PROJECT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await Axios.get(`/api/projects/${projectId}`);\n    dispatch({\n      type: PROJECT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PROJECT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateProject = project => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PROJECT_UPDATE_REQUEST,\n      payload: project\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.put(`/api/projects/${project._id}`, project, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PROJECT_UPDATE_SUCCESS,\n      payload: data.project\n    });\n  } catch (error) {\n    dispatch({\n      type: PROJECT_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["Axios","PROJECT_LIST_SUCCESS","PROJECT_LIST_REQUEST","PROJECT_LIST_FAIL","PROJECT_DETAILS_REQUEST","PROJECT_DETAILS_SUCCESS","PROJECT_DETAILS_FAIL","PROJECT_DELETE_FAIL","PROJECT_DELETE_REQUEST","PROJECT_DELETE_SUCCESS","PROJECT_CREATE_FAIL","PROJECT_CREATE_REQUEST","PROJECT_CREATE_SUCCESS","PROJECT_UPDATE_FAIL","PROJECT_UPDATE_REQUEST","PROJECT_UPDATE_SUCCESS","listProjects","dispatch","type","data","get","payload","error","response","message","createProject","name","category","image","images","description","Challenge","Solution","longTermImpact","additionalDocumentation","by","location","donationGoal","companyRegistrationNumber","companyAddress","yearFounded","contactName","telephoneNo","emailAddress","country","getState","userLogin","userInfo","post","headers","Authorization","token","deleteProject","projectId","delete","detailsOfProject","updateProject","project","put","_id"],"sources":["C:/Final year project - Copy - Copy/Final year/charity/frontend/src/actions/projectAction.js"],"sourcesContent":["import Axios from 'axios'\r\nimport {\r\n  PROJECT_LIST_SUCCESS,\r\n  PROJECT_LIST_REQUEST,\r\n  PROJECT_LIST_FAIL,\r\n  PROJECT_DETAILS_REQUEST,\r\n  PROJECT_DETAILS_SUCCESS,\r\n  PROJECT_DETAILS_FAIL,\r\n  PROJECT_DELETE_FAIL,\r\n  PROJECT_DELETE_REQUEST,\r\n  PROJECT_DELETE_SUCCESS,\r\n  PROJECT_CREATE_FAIL,\r\n  PROJECT_CREATE_REQUEST,\r\n  PROJECT_CREATE_SUCCESS,\r\n  PROJECT_UPDATE_FAIL,\r\n  PROJECT_UPDATE_REQUEST,\r\n  PROJECT_UPDATE_SUCCESS,\r\n  // PROJECT_REVIEW_SAVE_REQUEST,\r\n  // PROJECT_REVIEW_SAVE_SUCCESS,\r\n  // PROJECT_REVIEW_SAVE_FAIL,\r\n} from '../constants/projectConstant'\r\n\r\nexport const listProjects = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PROJECT_LIST_REQUEST })\r\n    const { data } = await Axios.get(\r\n      // `/api/projects?NGO=${NGO}&keyword=${keyword}&pageNumber=${pageNumber}`\r\n      `/api/projects`\r\n    )\r\n    dispatch({ type: PROJECT_LIST_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROJECT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n// export const createProject = () => async (dispatch, getState) => {\r\n//   try {\r\n//     const {\r\n//       userLogin: { userInfo },\r\n//     } = getState()\r\n//     dispatch({ type: PROJECT_CREATE_REQUEST })\r\n//     const { data } = await Axios.post(\r\n//       '/api/projects',\r\n//       {},\r\n//       {\r\n//         headers: {\r\n//           Authorization: `bearer ${userInfo.token}`,\r\n//         },\r\n//       }\r\n//     )\r\n//     dispatch({ type: PROJECT_CREATE_SUCCESS, payload: data.project })\r\n//   } catch (error) {\r\n//     dispatch({\r\n//       type: PROJECT_CREATE_FAIL,\r\n//       payload:\r\n//         error.response && error.response.data.message\r\n//           ? error.response.data.message\r\n//           : error.message,\r\n//     })\r\n//   }\r\n// }\r\n\r\nexport const createProject =\r\n  ({\r\n    name,\r\n    category,\r\n    image,\r\n    images,\r\n    description,\r\n    Challenge,\r\n    Solution,\r\n    longTermImpact,\r\n    additionalDocumentation,\r\n    by,\r\n    location,\r\n    donationGoal,\r\n    companyRegistrationNumber,\r\n    companyAddress,\r\n    yearFounded,\r\n    contactName,\r\n    telephoneNo,\r\n    emailAddress,\r\n    country,\r\n  }) =>\r\n  async (dispatch, getState) => {\r\n    try {\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n      dispatch({\r\n        type: PROJECT_CREATE_REQUEST,\r\n        payload: {\r\n          name,\r\n          category,\r\n          image,\r\n          images,\r\n          description,\r\n          Challenge,\r\n          Solution,\r\n          longTermImpact,\r\n          additionalDocumentation,\r\n          by,\r\n          location,\r\n          donationGoal,\r\n          companyRegistrationNumber,\r\n          companyAddress,\r\n          yearFounded,\r\n          contactName,\r\n          telephoneNo,\r\n          emailAddress,\r\n          country,\r\n        },\r\n      })\r\n      const { data } = await Axios.post(\r\n        '/api/projects/create',\r\n        {\r\n          name,\r\n          category,\r\n          image,\r\n          images,\r\n          description,\r\n          Challenge,\r\n          Solution,\r\n          longTermImpact,\r\n          additionalDocumentation,\r\n          by,\r\n          location,\r\n          donationGoal,\r\n          companyRegistrationNumber,\r\n          companyAddress,\r\n          yearFounded,\r\n          contactName,\r\n          telephoneNo,\r\n          emailAddress,\r\n          country,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `bearer ${userInfo.token}`,\r\n          },\r\n        }\r\n      )\r\n      dispatch({ type: PROJECT_CREATE_SUCCESS, payload: data })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PROJECT_CREATE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n// export const updateProductReview =\r\n//   (productId, review) => async (dispatch, getState) => {\r\n//     try {\r\n//       const {\r\n//         userSignin: { userInfo },\r\n//       } = getState()\r\n//       dispatch({ type: PROJECT_REVIEW_SAVE_REQUEST })\r\n//       const { data } = await Axios.post(\r\n//         `/api/projects/${productId}/reviews`,\r\n//         review,\r\n//         {\r\n//           headers: {\r\n//             Authorization: `bearer ${userInfo.token}`,\r\n//           },\r\n//         }\r\n//       )\r\n//       dispatch({ type: PROJECT_REVIEW_SAVE_SUCCESS, payload: data })\r\n//     } catch (error) {\r\n//       dispatch({\r\n//         type: PROJECT_REVIEW_SAVE_FAIL,\r\n//         payload:\r\n//           error.response && error.response.data.message\r\n//             ? error.response.data.message\r\n//             : error.message,\r\n//       })\r\n//     }\r\n//   }\r\n\r\nexport const deleteProject = (projectId) => async (dispatch, getState) => {\r\n  try {\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n    dispatch({ type: PROJECT_DELETE_REQUEST, payload: projectId })\r\n    const { data } = await Axios.delete(`/api/projects/${projectId}`, {\r\n      headers: {\r\n        Authorization: `bearer ${userInfo.token}`,\r\n      },\r\n    })\r\n    dispatch({ type: PROJECT_DELETE_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROJECT_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\nexport const detailsOfProject = (projectId) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PROJECT_DETAILS_REQUEST })\r\n    const { data } = await Axios.get(`/api/projects/${projectId}`)\r\n    dispatch({ type: PROJECT_DETAILS_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROJECT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\nexport const updateProject = (project) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PROJECT_UPDATE_REQUEST, payload: project })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n    const { data } = await Axios.put(`/api/projects/${project._id}`, project, {\r\n      headers: { Authorization: `Bearer ${userInfo.token}` },\r\n    })\r\n    dispatch({ type: PROJECT_UPDATE_SUCCESS, payload: data.project })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROJECT_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,oBADF,EAEEC,oBAFF,EAGEC,iBAHF,EAIEC,uBAJF,EAKEC,uBALF,EAMEC,oBANF,EAOEC,mBAPF,EAQEC,sBARF,EASEC,sBATF,EAUEC,mBAVF,EAWEC,sBAXF,EAYEC,sBAZF,EAaEC,mBAbF,EAcEC,sBAdF,EAeEC,sBAfF,CAgBE;AACA;AACA;AAlBF,OAmBO,8BAnBP;AAqBA,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAoB;EACpD,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAEhB;IAAR,CAAD,CAAR;IACA,MAAM;MAAEiB;IAAF,IAAW,MAAMnB,KAAK,CAACoB,GAAN,EACrB;IACC,eAFoB,CAAvB;IAIAH,QAAQ,CAAC;MAAEC,IAAI,EAAEjB,oBAAR;MAA8BoB,OAAO,EAAEF;IAAvC,CAAD,CAAR;EACD,CAPD,CAOE,OAAOG,KAAP,EAAc;IACdL,QAAQ,CAAC;MACPC,IAAI,EAAEf,iBADC;MAEPkB,OAAO,EACLC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADxB,GAEIF,KAAK,CAACE;IALL,CAAD,CAAR;EAOD;AACF,CAjBM,C,CAmBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,aAAa,GACxB;EAAA,IAAC;IACCC,IADD;IAECC,QAFD;IAGCC,KAHD;IAICC,MAJD;IAKCC,WALD;IAMCC,SAND;IAOCC,QAPD;IAQCC,cARD;IASCC,uBATD;IAUCC,EAVD;IAWCC,QAXD;IAYCC,YAZD;IAaCC,yBAbD;IAcCC,cAdD;IAeCC,WAfD;IAgBCC,WAhBD;IAiBCC,WAjBD;IAkBCC,YAlBD;IAmBCC;EAnBD,CAAD;EAAA,OAqBA,OAAO3B,QAAP,EAAiB4B,QAAjB,KAA8B;IAC5B,IAAI;MACF,MAAM;QACJC,SAAS,EAAE;UAAEC;QAAF;MADP,IAEFF,QAAQ,EAFZ;MAGA5B,QAAQ,CAAC;QACPC,IAAI,EAAEP,sBADC;QAEPU,OAAO,EAAE;UACPK,IADO;UAEPC,QAFO;UAGPC,KAHO;UAIPC,MAJO;UAKPC,WALO;UAMPC,SANO;UAOPC,QAPO;UAQPC,cARO;UASPC,uBATO;UAUPC,EAVO;UAWPC,QAXO;UAYPC,YAZO;UAaPC,yBAbO;UAcPC,cAdO;UAePC,WAfO;UAgBPC,WAhBO;UAiBPC,WAjBO;UAkBPC,YAlBO;UAmBPC;QAnBO;MAFF,CAAD,CAAR;MAwBA,MAAM;QAAEzB;MAAF,IAAW,MAAMnB,KAAK,CAACgD,IAAN,CACrB,sBADqB,EAErB;QACEtB,IADF;QAEEC,QAFF;QAGEC,KAHF;QAIEC,MAJF;QAKEC,WALF;QAMEC,SANF;QAOEC,QAPF;QAQEC,cARF;QASEC,uBATF;QAUEC,EAVF;QAWEC,QAXF;QAYEC,YAZF;QAaEC,yBAbF;QAcEC,cAdF;QAeEC,WAfF;QAgBEC,WAhBF;QAiBEC,WAjBF;QAkBEC,YAlBF;QAmBEC;MAnBF,CAFqB,EAuBrB;QACEK,OAAO,EAAE;UACPC,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;QADjC;MADX,CAvBqB,CAAvB;MA6BAlC,QAAQ,CAAC;QAAEC,IAAI,EAAEN,sBAAR;QAAgCS,OAAO,EAAEF;MAAzC,CAAD,CAAR;IACD,CA1DD,CA0DE,OAAOG,KAAP,EAAc;MACdL,QAAQ,CAAC;QACPC,IAAI,EAAER,mBADC;QAEPW,OAAO,EACLC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADxB,GAEIF,KAAK,CAACE;MALL,CAAD,CAAR;IAOD;EACF,CAzFD;AAAA,CADK,C,CA4FP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAM4B,aAAa,GAAIC,SAAD,IAAe,OAAOpC,QAAP,EAAiB4B,QAAjB,KAA8B;EACxE,IAAI;IACF,MAAM;MACJC,SAAS,EAAE;QAAEC;MAAF;IADP,IAEFF,QAAQ,EAFZ;IAGA5B,QAAQ,CAAC;MAAEC,IAAI,EAAEV,sBAAR;MAAgCa,OAAO,EAAEgC;IAAzC,CAAD,CAAR;IACA,MAAM;MAAElC;IAAF,IAAW,MAAMnB,KAAK,CAACsD,MAAN,CAAc,iBAAgBD,SAAU,EAAxC,EAA2C;MAChEJ,OAAO,EAAE;QACPC,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;MADjC;IADuD,CAA3C,CAAvB;IAKAlC,QAAQ,CAAC;MAAEC,IAAI,EAAET,sBAAR;MAAgCY,OAAO,EAAEF;IAAzC,CAAD,CAAR;EACD,CAXD,CAWE,OAAOG,KAAP,EAAc;IACdL,QAAQ,CAAC;MACPC,IAAI,EAAEX,mBADC;MAEPc,OAAO,EACLC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADxB,GAEIF,KAAK,CAACE;IALL,CAAD,CAAR;EAOD;AACF,CArBM;AAsBP,OAAO,MAAM+B,gBAAgB,GAAIF,SAAD,IAAe,MAAOpC,QAAP,IAAoB;EACjE,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAEd;IAAR,CAAD,CAAR;IACA,MAAM;MAAEe;IAAF,IAAW,MAAMnB,KAAK,CAACoB,GAAN,CAAW,iBAAgBiC,SAAU,EAArC,CAAvB;IACApC,QAAQ,CAAC;MAAEC,IAAI,EAAEb,uBAAR;MAAiCgB,OAAO,EAAEF;IAA1C,CAAD,CAAR;EACD,CAJD,CAIE,OAAOG,KAAP,EAAc;IACdL,QAAQ,CAAC;MACPC,IAAI,EAAEZ,oBADC;MAEPe,OAAO,EACLC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADxB,GAEIF,KAAK,CAACE;IALL,CAAD,CAAR;EAOD;AACF,CAdM;AAeP,OAAO,MAAMgC,aAAa,GAAIC,OAAD,IAAa,OAAOxC,QAAP,EAAiB4B,QAAjB,KAA8B;EACtE,IAAI;IACF5B,QAAQ,CAAC;MAAEC,IAAI,EAAEJ,sBAAR;MAAgCO,OAAO,EAAEoC;IAAzC,CAAD,CAAR;IACA,MAAM;MACJX,SAAS,EAAE;QAAEC;MAAF;IADP,IAEFF,QAAQ,EAFZ;IAGA,MAAM;MAAE1B;IAAF,IAAW,MAAMnB,KAAK,CAAC0D,GAAN,CAAW,iBAAgBD,OAAO,CAACE,GAAI,EAAvC,EAA0CF,OAA1C,EAAmD;MACxER,OAAO,EAAE;QAAEC,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;MAA1C;IAD+D,CAAnD,CAAvB;IAGAlC,QAAQ,CAAC;MAAEC,IAAI,EAAEH,sBAAR;MAAgCM,OAAO,EAAEF,IAAI,CAACsC;IAA9C,CAAD,CAAR;EACD,CATD,CASE,OAAOnC,KAAP,EAAc;IACdL,QAAQ,CAAC;MACPC,IAAI,EAAEL,mBADC;MAEPQ,OAAO,EACLC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADxB,GAEIF,KAAK,CAACE;IALL,CAAD,CAAR;EAOD;AACF,CAnBM"},"metadata":{},"sourceType":"module"}
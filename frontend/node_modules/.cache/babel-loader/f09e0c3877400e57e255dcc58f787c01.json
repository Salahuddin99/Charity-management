{"ast":null,"code":"import Axios from 'axios';\nimport { PROJECT_LIST_SUCCESS, PROJECT_LIST_REQUEST, PROJECT_LIST_FAIL, PROJECT_DETAILS_REQUEST, PROJECT_DETAILS_SUCCESS, PROJECT_DETAILS_FAIL, PROJECT_DELETE_FAIL, PROJECT_DELETE_REQUEST, PROJECT_DELETE_SUCCESS, PROJECT_CREATE_FAIL, PROJECT_CREATE_REQUEST, PROJECT_CREATE_SUCCESS, PROJECT_UPDATE_FAIL, PROJECT_UPDATE_REQUEST, PROJECT_UPDATE_SUCCESS // PROJECT_REVIEW_SAVE_REQUEST,\n// PROJECT_REVIEW_SAVE_SUCCESS,\n// PROJECT_REVIEW_SAVE_FAIL,\n} from '../constants/projectConstant';\nexport const listProjects = () => // { NGO = '', keyword = '', pageNumber = '' }\nasync dispatch => {\n  try {\n    dispatch({\n      type: PROJECT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await Axios.get( // `/api/projects?NGO=${NGO}&keyword=${keyword}&pageNumber=${pageNumber}`\n    `/api/projects`);\n    dispatch({\n      type: PROJECT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PROJECT_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createProject = () => async (dispatch, getState) => {\n  try {\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    dispatch({\n      type: PROJECT_CREATE_REQUEST\n    });\n    const {\n      data\n    } = await Axios.post('/api/projects', {}, {\n      headers: {\n        Authorization: `bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PROJECT_CREATE_SUCCESS,\n      payload: data.project\n    });\n  } catch (error) {\n    dispatch({\n      type: PROJECT_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // export const updateProductReview =\n//   (productId, review) => async (dispatch, getState) => {\n//     try {\n//       const {\n//         userSignin: { userInfo },\n//       } = getState()\n//       dispatch({ type: PROJECT_REVIEW_SAVE_REQUEST })\n//       const { data } = await Axios.post(\n//         `/api/projects/${productId}/reviews`,\n//         review,\n//         {\n//           headers: {\n//             Authorization: `bearer ${userInfo.token}`,\n//           },\n//         }\n//       )\n//       dispatch({ type: PROJECT_REVIEW_SAVE_SUCCESS, payload: data })\n//     } catch (error) {\n//       dispatch({\n//         type: PROJECT_REVIEW_SAVE_FAIL,\n//         payload:\n//           error.response && error.response.data.message\n//             ? error.response.data.message\n//             : error.message,\n//       })\n//     }\n//   }\n\nexport const deleteProject = projectId => async (dispatch, getState) => {\n  try {\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    dispatch({\n      type: PROJECT_DELETE_REQUEST,\n      payload: projectId\n    });\n    const {\n      data\n    } = await Axios.delete(`/api/projects/${projectId}`, {\n      headers: {\n        Authorization: `bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PROJECT_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PROJECT_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const detailsOfProject = projectId => async dispatch => {\n  try {\n    dispatch({\n      type: PROJECT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await Axios.get(`/api/projects/${projectId}`);\n    dispatch({\n      type: PROJECT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PROJECT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateProject = project => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PROJECT_UPDATE_REQUEST,\n      payload: project\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.put(`/api/projects/${project._id}`, project, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PROJECT_UPDATE_SUCCESS,\n      payload: data.project\n    });\n  } catch (error) {\n    dispatch({\n      type: PROJECT_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["Axios","PROJECT_LIST_SUCCESS","PROJECT_LIST_REQUEST","PROJECT_LIST_FAIL","PROJECT_DETAILS_REQUEST","PROJECT_DETAILS_SUCCESS","PROJECT_DETAILS_FAIL","PROJECT_DELETE_FAIL","PROJECT_DELETE_REQUEST","PROJECT_DELETE_SUCCESS","PROJECT_CREATE_FAIL","PROJECT_CREATE_REQUEST","PROJECT_CREATE_SUCCESS","PROJECT_UPDATE_FAIL","PROJECT_UPDATE_REQUEST","PROJECT_UPDATE_SUCCESS","listProjects","dispatch","type","data","get","payload","error","response","message","createProject","getState","userLogin","userInfo","post","headers","Authorization","token","project","deleteProject","projectId","delete","detailsOfProject","updateProject","put","_id"],"sources":["C:/Final year project - Copy - Copy/Final year/charity/frontend/src/actions/projectAction.js"],"sourcesContent":["import Axios from 'axios'\r\nimport {\r\n  PROJECT_LIST_SUCCESS,\r\n  PROJECT_LIST_REQUEST,\r\n  PROJECT_LIST_FAIL,\r\n  PROJECT_DETAILS_REQUEST,\r\n  PROJECT_DETAILS_SUCCESS,\r\n  PROJECT_DETAILS_FAIL,\r\n  PROJECT_DELETE_FAIL,\r\n  PROJECT_DELETE_REQUEST,\r\n  PROJECT_DELETE_SUCCESS,\r\n  PROJECT_CREATE_FAIL,\r\n  PROJECT_CREATE_REQUEST,\r\n  PROJECT_CREATE_SUCCESS,\r\n  PROJECT_UPDATE_FAIL,\r\n  PROJECT_UPDATE_REQUEST,\r\n  PROJECT_UPDATE_SUCCESS,\r\n  // PROJECT_REVIEW_SAVE_REQUEST,\r\n  // PROJECT_REVIEW_SAVE_SUCCESS,\r\n  // PROJECT_REVIEW_SAVE_FAIL,\r\n} from '../constants/projectConstant'\r\n\r\nexport const listProjects =\r\n  () =>\r\n  // { NGO = '', keyword = '', pageNumber = '' }\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch({ type: PROJECT_LIST_REQUEST })\r\n      const { data } = await Axios.get(\r\n        // `/api/projects?NGO=${NGO}&keyword=${keyword}&pageNumber=${pageNumber}`\r\n        `/api/projects`\r\n      )\r\n      dispatch({ type: PROJECT_LIST_SUCCESS, payload: data })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PROJECT_LIST_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\nexport const createProject = () => async (dispatch, getState) => {\r\n  try {\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n    dispatch({ type: PROJECT_CREATE_REQUEST })\r\n    const { data } = await Axios.post(\r\n      '/api/projects',\r\n      {},\r\n      {\r\n        headers: {\r\n          Authorization: `bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n    )\r\n    dispatch({ type: PROJECT_CREATE_SUCCESS, payload: data.project })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROJECT_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n// export const updateProductReview =\r\n//   (productId, review) => async (dispatch, getState) => {\r\n//     try {\r\n//       const {\r\n//         userSignin: { userInfo },\r\n//       } = getState()\r\n//       dispatch({ type: PROJECT_REVIEW_SAVE_REQUEST })\r\n//       const { data } = await Axios.post(\r\n//         `/api/projects/${productId}/reviews`,\r\n//         review,\r\n//         {\r\n//           headers: {\r\n//             Authorization: `bearer ${userInfo.token}`,\r\n//           },\r\n//         }\r\n//       )\r\n//       dispatch({ type: PROJECT_REVIEW_SAVE_SUCCESS, payload: data })\r\n//     } catch (error) {\r\n//       dispatch({\r\n//         type: PROJECT_REVIEW_SAVE_FAIL,\r\n//         payload:\r\n//           error.response && error.response.data.message\r\n//             ? error.response.data.message\r\n//             : error.message,\r\n//       })\r\n//     }\r\n//   }\r\n\r\nexport const deleteProject = (projectId) => async (dispatch, getState) => {\r\n  try {\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n    dispatch({ type: PROJECT_DELETE_REQUEST, payload: projectId })\r\n    const { data } = await Axios.delete(`/api/projects/${projectId}`, {\r\n      headers: {\r\n        Authorization: `bearer ${userInfo.token}`,\r\n      },\r\n    })\r\n    dispatch({ type: PROJECT_DELETE_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROJECT_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\nexport const detailsOfProject = (projectId) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PROJECT_DETAILS_REQUEST })\r\n    const { data } = await Axios.get(`/api/projects/${projectId}`)\r\n    dispatch({ type: PROJECT_DETAILS_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROJECT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\nexport const updateProject = (project) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PROJECT_UPDATE_REQUEST, payload: project })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n    const { data } = await Axios.put(`/api/projects/${project._id}`, project, {\r\n      headers: { Authorization: `Bearer ${userInfo.token}` },\r\n    })\r\n    dispatch({ type: PROJECT_UPDATE_SUCCESS, payload: data.project })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROJECT_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Final year project - Copy - Copy\\\\Final year\\\\charity\\\\frontend\\\\src\\\\screens\\\\ProjectEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button, Toast, Container, ListGroup, ListGroupItem } from 'react-bootstrap';\nimport { useEffect } from 'react';\nimport { detailsOfProject, updateProject } from '../actions/projectAction';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loading from '../components/Loading';\nimport ErrorMessageBox from '../components/ErrorMessagebox';\nimport { PROJECT_UPDATE_RESET, PROJECT_UPLOAD_REQUEST, PROJECT_UPLOAD_SUCCESS, PROJECT_UPLOAD_FAIL } from '../constants/projectConstant';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProjectEditScreen(props) {\n  _s();\n\n  const navigate = useNavigate();\n  const params = useParams();\n  const {\n    id: projectId\n  } = params;\n  const [uploading, setUploading] = useState(false);\n  const [name, setName] = useState('');\n  const [category, setCategory] = useState();\n  const [image, setImage] = useState('');\n  const [images, setImages] = useState([]);\n  const [description, setDescription] = useState('');\n  const [Challenge, setChallenge] = useState('');\n  const [Solution, setSolution] = useState('');\n  const [longTermImpact, setLongTermImpact] = useState('');\n  const [additionalDocumentation, setAdditionalDocumentation] = useState('');\n  const projectUpdate = useSelector(state => state.projectUpdate);\n  const {\n    error: errorUpdate,\n    loading: loadingUpdate,\n    success: successUpdate\n  } = projectUpdate;\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateProject({\n      _id: projectId,\n      name,\n      category,\n      image,\n      images,\n      description,\n      Challenge,\n      Solution,\n      longTermImpact,\n      additionalDocumentation\n    }));\n  };\n\n  const projectDetails = useSelector(state => state.projectDetails);\n  const {\n    project,\n    loading,\n    error\n  } = projectDetails;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: PROJECT_UPDATE_RESET\n      });\n      navigate('/adminDashboard');\n    }\n\n    if (!project.name || project._id !== projectId || successUpdate) {\n      dispatch(detailsOfProject(projectId));\n    } else {\n      setName(project.name);\n      setCategory(project.category);\n      setImage(project.image);\n      setDescription(project.description);\n      setChallenge(project.Challenge);\n      setSolution(project.Solution);\n      setLongTermImpact(project.LongTermImpact);\n      setAdditionalDocumentation(project.additionalDocumentation);\n    }\n  }, [project, successUpdate, navigate, dispatch, projectId]);\n\n  const uploadFileHandler = async (e, forImages) => {\n    const file = e.target.files[0];\n    const bodyformData = new FormData();\n    bodyformData.append('file', file);\n    setUploading(true);\n\n    try {\n      dispatch({\n        type: PROJECT_UPLOAD_REQUEST\n      });\n      const {\n        data\n      } = await axios.post('/api/upload', bodyformData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      dispatch({\n        type: PROJECT_UPLOAD_SUCCESS\n      });\n\n      if (forImages) {\n        setImages([...images, data.secure_url]);\n      } else {\n        setImage(data.secure_url);\n      }\n\n      Toast.success('image upload sucessful');\n      setUploading(false);\n    } catch (error) {\n      dispatch({\n        type: PROJECT_UPLOAD_FAIL\n      });\n      console.error(error);\n      setUploading(false);\n    }\n  };\n\n  const deleteFileHandler = async fileName => {\n    setImages(images.filter(x => x === fileName));\n    Toast.succes('Image removed successfully');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Edit Project \", project.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }, this), errorUpdate && /*#__PURE__*/_jsxDEV(ErrorMessageBox, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(ErrorMessageBox, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"category\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter category\",\n          value: category,\n          onChange: e => setCategory(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"image\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter image\",\n          value: image,\n          onChange: e => setImage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"imageFile\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Upload File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"file\",\n            onChange: uploadFileHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), uploading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"additionalImage\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Additional Images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), images.length === 0 && /*#__PURE__*/_jsxDEV(ErrorMessageBox, {\n          children: \"No image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: images.map(x => /*#__PURE__*/_jsxDEV(ListGroupItem, {\n            onChange: e => setImages(e.target.value),\n            children: [x, /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"light\",\n              onClick: x => deleteFileHandler(x),\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-times-circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 19\n            }, this)]\n          }, x, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"additionalImageFile\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Upload Aditional Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"file\",\n            onChange: e => uploadFileHandler(e, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this), uploading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"description\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          placeholder: \"Enter description\",\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"Challenge\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Challenge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          placeholder: \"Enter Challenge\",\n          value: Challenge,\n          onChange: e => setChallenge(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"Solution\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Solution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          placeholder: \"Enter Solution\",\n          value: Solution,\n          onChange: e => setSolution(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"LongTermImpact\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Long Term Impact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          placeholder: \"Enter long Term Impact\",\n          value: longTermImpact,\n          onChange: e => setLongTermImpact(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"additionalDocumentation\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Additional Documentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter additionalDocumentation\",\n          value: additionalDocumentation,\n          onChange: e => setAdditionalDocumentation(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"light\",\n        type: \"button\",\n        onClick: () => navigate('/adminDashboard'),\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProjectEditScreen, \"DMMSkZ5jAK77gFQWUIftd48qmEk=\", false, function () {\n  return [useNavigate, useParams, useSelector, useSelector, useDispatch];\n});\n\n_c = ProjectEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectEditScreen\");","map":{"version":3,"names":["React","useState","Form","Button","Toast","Container","ListGroup","ListGroupItem","useEffect","detailsOfProject","updateProject","useDispatch","useSelector","Loading","ErrorMessageBox","PROJECT_UPDATE_RESET","PROJECT_UPLOAD_REQUEST","PROJECT_UPLOAD_SUCCESS","PROJECT_UPLOAD_FAIL","useNavigate","useParams","axios","ProjectEditScreen","props","navigate","params","id","projectId","uploading","setUploading","name","setName","category","setCategory","image","setImage","images","setImages","description","setDescription","Challenge","setChallenge","Solution","setSolution","longTermImpact","setLongTermImpact","additionalDocumentation","setAdditionalDocumentation","projectUpdate","state","error","errorUpdate","loading","loadingUpdate","success","successUpdate","submitHandler","e","preventDefault","dispatch","_id","projectDetails","project","type","LongTermImpact","uploadFileHandler","forImages","file","target","files","bodyformData","FormData","append","data","post","headers","secure_url","console","deleteFileHandler","fileName","filter","x","succes","value","length","map"],"sources":["C:/Final year project - Copy - Copy/Final year/charity/frontend/src/screens/ProjectEditScreen.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport {\r\n  Form,\r\n  Button,\r\n  Toast,\r\n  Container,\r\n  ListGroup,\r\n  ListGroupItem,\r\n} from 'react-bootstrap'\r\nimport { useEffect } from 'react'\r\nimport { detailsOfProject, updateProject } from '../actions/projectAction'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loading from '../components/Loading'\r\nimport ErrorMessageBox from '../components/ErrorMessagebox'\r\nimport {\r\n  PROJECT_UPDATE_RESET,\r\n  PROJECT_UPLOAD_REQUEST,\r\n  PROJECT_UPLOAD_SUCCESS,\r\n  PROJECT_UPLOAD_FAIL,\r\n} from '../constants/projectConstant'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nexport default function ProjectEditScreen(props) {\r\n  const navigate = useNavigate()\r\n  const params = useParams()\r\n  const { id: projectId } = params\r\n  const [uploading, setUploading] = useState(false)\r\n  const [name, setName] = useState('')\r\n  const [category, setCategory] = useState()\r\n  const [image, setImage] = useState('')\r\n  const [images, setImages] = useState([])\r\n  const [description, setDescription] = useState('')\r\n  const [Challenge, setChallenge] = useState('')\r\n  const [Solution, setSolution] = useState('')\r\n  const [longTermImpact, setLongTermImpact] = useState('')\r\n  const [additionalDocumentation, setAdditionalDocumentation] = useState('')\r\n\r\n  const projectUpdate = useSelector((state) => state.projectUpdate)\r\n  const {\r\n    error: errorUpdate,\r\n    loading: loadingUpdate,\r\n    success: successUpdate,\r\n  } = projectUpdate\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      updateProject({\r\n        _id: projectId,\r\n        name,\r\n        category,\r\n        image,\r\n        images,\r\n        description,\r\n        Challenge,\r\n        Solution,\r\n        longTermImpact,\r\n        additionalDocumentation,\r\n      })\r\n    )\r\n  }\r\n\r\n  const projectDetails = useSelector((state) => state.projectDetails)\r\n  const { project, loading, error } = projectDetails\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PROJECT_UPDATE_RESET })\r\n      navigate('/adminDashboard')\r\n    }\r\n    if (!project.name || project._id !== projectId || successUpdate) {\r\n      dispatch(detailsOfProject(projectId))\r\n    } else {\r\n      setName(project.name)\r\n      setCategory(project.category)\r\n      setImage(project.image)\r\n      setDescription(project.description)\r\n      setChallenge(project.Challenge)\r\n      setSolution(project.Solution)\r\n      setLongTermImpact(project.LongTermImpact)\r\n      setAdditionalDocumentation(project.additionalDocumentation)\r\n    }\r\n  }, [project, successUpdate, navigate, dispatch, projectId])\r\n\r\n  const uploadFileHandler = async (e, forImages) => {\r\n    const file = e.target.files[0]\r\n    const bodyformData = new FormData()\r\n    bodyformData.append('file', file)\r\n    setUploading(true)\r\n    try {\r\n      dispatch({ type: PROJECT_UPLOAD_REQUEST })\r\n      const { data } = await axios.post('/api/upload', bodyformData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      })\r\n      dispatch({ type: PROJECT_UPLOAD_SUCCESS })\r\n      if (forImages) {\r\n        setImages([...images, data.secure_url])\r\n      } else {\r\n        setImage(data.secure_url)\r\n      }\r\n      Toast.success('image upload sucessful')\r\n      setUploading(false)\r\n    } catch (error) {\r\n      dispatch({ type: PROJECT_UPLOAD_FAIL })\r\n      console.error(error)\r\n      setUploading(false)\r\n    }\r\n  }\r\n  const deleteFileHandler = async (fileName) => {\r\n    setImages(images.filter((x) => x === fileName))\r\n    Toast.succes('Image removed successfully')\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <h1>Edit Project {project.name}</h1>\r\n      {loadingUpdate && <Loading></Loading>}\r\n      {errorUpdate && (\r\n        <ErrorMessageBox variant=\"danger\">{error}</ErrorMessageBox>\r\n      )}\r\n      {loading ? (\r\n        <Loading></Loading>\r\n      ) : error ? (\r\n        <ErrorMessageBox variant=\"danger\">{error}</ErrorMessageBox>\r\n      ) : (\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"category\">\r\n            <Form.Label>Category</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter category\"\r\n              value={category}\r\n              onChange={(e) => setCategory(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"image\">\r\n            <Form.Label>Image</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter image\"\r\n              value={image}\r\n              onChange={(e) => setImage(e.target.value)}\r\n            ></Form.Control>\r\n            <Form.Group controlId=\"imageFile\">\r\n              <Form.Label>Upload File</Form.Label>\r\n              <Form.Control\r\n                type=\"file\"\r\n                onChange={uploadFileHandler}\r\n              ></Form.Control>\r\n              {uploading && <Loading />}\r\n            </Form.Group>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"additionalImage\">\r\n            <Form.Label>Additional Images</Form.Label>\r\n            {images.length === 0 && <ErrorMessageBox>No image</ErrorMessageBox>}\r\n            <ListGroup variant=\"flush\">\r\n              {images.map((x) => (\r\n                <ListGroupItem\r\n                  key={x}\r\n                  onChange={(e) => setImages(e.target.value)}\r\n                >\r\n                  {x}\r\n                  <Button variant=\"light\" onClick={(x) => deleteFileHandler(x)}>\r\n                    <i className=\"fa fa-times-circle\"></i>\r\n                  </Button>\r\n                </ListGroupItem>\r\n              ))}\r\n            </ListGroup>\r\n            <Form.Group controlId=\"additionalImageFile\">\r\n              <Form.Label>Upload Aditional Image</Form.Label>\r\n              <Form.Control\r\n                type=\"file\"\r\n                onChange={(e) => uploadFileHandler(e, true)}\r\n              ></Form.Control>\r\n              {uploading && <Loading />}\r\n            </Form.Group>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"description\">\r\n            <Form.Label>Description</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              placeholder=\"Enter description\"\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"Challenge\">\r\n            <Form.Label>Challenge</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              placeholder=\"Enter Challenge\"\r\n              value={Challenge}\r\n              onChange={(e) => setChallenge(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"Solution\">\r\n            <Form.Label>Solution</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              placeholder=\"Enter Solution\"\r\n              value={Solution}\r\n              onChange={(e) => setSolution(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"LongTermImpact\">\r\n            <Form.Label>Long Term Impact</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              placeholder=\"Enter long Term Impact\"\r\n              value={longTermImpact}\r\n              onChange={(e) => setLongTermImpact(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"additionalDocumentation\">\r\n            <Form.Label>Additional Documentation</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter additionalDocumentation\"\r\n              value={additionalDocumentation}\r\n              onChange={(e) => setAdditionalDocumentation(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Update\r\n          </Button>{' '}\r\n          <Button\r\n            variant=\"light\"\r\n            type=\"button\"\r\n            onClick={() => navigate('/adminDashboard')}\r\n          >\r\n            Back\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
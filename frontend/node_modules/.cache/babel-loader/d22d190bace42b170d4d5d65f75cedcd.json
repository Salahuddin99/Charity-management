{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension'; //import { projectListReducer } from './reducers/projectReducer'\n\nimport { userLoginReducer, userRegisterReducer } from './reducers/userReducer';\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst reducer = combineReducers({\n  //projectList: projectListReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userUpdate: userRegisterReducer\n});\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userLoginReducer","userRegisterReducer","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userLogin","userInfo","reducer","userRegister","userUpdate","middleware","store"],"sources":["C:/Final year project - Copy - Copy/Final year/charity/frontend/src/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n//import { projectListReducer } from './reducers/projectReducer'\r\n\r\nimport { userLoginReducer, userRegisterReducer } from './reducers/userReducer'\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null\r\n\r\nconst initialState = {\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n}\r\nconst reducer = combineReducers({\r\n  //projectList: projectListReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userUpdate: userRegisterReducer,\r\n})\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\nexport default store\r\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC,C,CACA;;AAEA,SAASC,gBAAT,EAA2BC,mBAA3B,QAAsD,wBAAtD;AAEA,MAAMC,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMG,YAAY,GAAG;EACnBC,SAAS,EAAE;IAAEC,QAAQ,EAAEP;EAAZ;AADQ,CAArB;AAGA,MAAMQ,OAAO,GAAGd,eAAe,CAAC;EAC9B;EACAY,SAAS,EAAER,gBAFmB;EAG9BW,YAAY,EAAEV,mBAHgB;EAI9BW,UAAU,EAAEX;AAJkB,CAAD,CAA/B;AAOA,MAAMY,UAAU,GAAG,CAACf,KAAD,CAAnB;AAEA,MAAMgB,KAAK,GAAGnB,WAAW,CACvBe,OADuB,EAEvBH,YAFuB,EAGvBR,mBAAmB,CAACF,eAAe,CAAC,GAAGgB,UAAJ,CAAhB,CAHI,CAAzB;AAKA,eAAeC,KAAf"},"metadata":{},"sourceType":"module"}
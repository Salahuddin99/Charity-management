{"ast":null,"code":"// import axios from 'axios'\n// import { useEffect, useReducer } from 'react'\n// import {\n//   Col,\n//   ListGroup,\n//   ListGroupItem,\n//   Row,\n//   Image,\n//   Card,\n//   Button,\n//   Container,\n// } from 'react-bootstrap'\n// import { useParams } from 'react-router-dom'\n// import ErrorMessageBox from '../components/ErrorMessagebox'\n// import Loading from '../components/Loading'\n// import { getError } from '../utils'\n// const reducer = (state, action) => {\n//   switch (action.type) {\n//     case 'FETCH_REQUEST':\n//       return { ...state, loading: true }\n//     case 'FETCH_SUCCESS':\n//       return { ...state, donation: action.payload, loading: false }\n//     case 'FETCH_fail':\n//       return { ...state, loading: false, error: action.payload }\n//     default:\n//       return state\n//   }\n// }\n// function ProjectScreen() {\n//   const params = useParams()\n//   const { slug } = params\n//   const [{ loading, error, donation }, dispatch] = useReducer(reducer, {\n//     donation: [],\n//     loading: true,\n//     error: '',\n//   })\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       dispatch({ type: 'FETCH_REQUEST' })\n//       try {\n//         const result = await axios.get(`/api/project/slug/${slug}`)\n//         dispatch({ type: 'FETCH_SUCCESS', payload: result.data })\n//       } catch (err) {\n//         dispatch({ type: 'FETCH_FAIL', payload: getError(err) })\n//       }\n//     }\n//     fetchData()\n//   }, [slug])\n//   return loading ? (\n//     <Loading />\n//   ) : error ? (\n//     <ErrorMessageBox variant=\"danger\">{error}</ErrorMessageBox>\n//   ) : (\n//     <Container className=\"mt-5\">\n//       <Row>\n//         <Col md={3}>\n//           <Image src={donation.image} alt={donation.name} fluid />\n//         </Col>\n//         <Col md={6}>\n//           <ListGroup variant=\"flush\">\n//             <ListGroupItem>\n//               <h3>{donation.name}</h3>\n//             </ListGroupItem>\n//             <ListGroupItem>\n//               <h6>\n//                 <strong>Location: </strong> {donation.Location}\n//               </h6>\n//               <h6>\n//                 <strong>By: </strong> {donation.by}\n//               </h6>\n//             </ListGroupItem>\n//             <ListGroupItem>\n//               <p>\n//                 <strong>Description: </strong> {donation.description}\n//               </p>\n//               <p>\n//                 <strong>Challenge:</strong> {donation.Challenge}\n//               </p>\n//               <p>\n//                 <strong>Solution: </strong>\n//                 {donation.Solution}\n//               </p>\n//               <p>\n//                 <strong>Longterm Impact:</strong> {donation.LongTermImpact}\n//               </p>\n//             </ListGroupItem>\n//           </ListGroup>\n//         </Col>\n//         <Col md={3}>\n//           <Card>\n//             <ListGroup variant=\"flush\">\n//               <ListGroupItem>\n//                 <h5>Category: {donation.category}</h5>\n//               </ListGroupItem>\n//               <ListGroupItem>\n//                 <div>\n//                   Status:{' '}\n//                   {donation.donationGoal <= donation.currentdonation\n//                     ? 'Donation goal has been completed'\n//                     : 'In progress'}\n//                 </div>\n//               </ListGroupItem>\n//               <ListGroupItem>\n//                 <div>Donation needed: ${donation.donationGoal}</div>\n//                 <div>Collected amount: ${donation.currentdonation}</div>\n//               </ListGroupItem>\n//               <ListGroupItem>\n//                 <Button\n//                   className=\"btn-block\"\n//                   type=\"button\"\n//                   disabled={donation.donationGoal <= donation.currentdonation}\n//                 >\n//                   Donate\n//                 </Button>\n//               </ListGroupItem>\n//             </ListGroup>\n//           </Card>\n//         </Col>\n//       </Row>\n//     </Container>\n//   )\n// }\n// export default ProjectScreen\n// import React, { useEffect } from 'react'\n// import { Row, Col, Carousel, Image, Pagination } from 'react-bootstrap'\n// import Product from '../components/Product'\n// import { useDispatch, useSelector } from 'react-redux'\n// import { listProducts } from '../actions/productActions'\n// import LoadingBox from '../components/LoadingBox'\n// import MessageBox from '../components/MessageBox'\n// import { Link, useParams } from 'react-router-dom'\n// import { LinkContainer } from 'react-router-bootstrap'\n// export default function StartProjectScreen() {\n//   const params = useParams()\n//   const keyword = params.keyword\n//   const pageNumber = params.pageNumber || 1\n//   const dispatch = useDispatch()\n//   const productList = useSelector((state) => state.productList)\n//   const { products, pages, page, loading, error } = productList\n//   useEffect(() => {\n//     dispatch(listProducts({ keyword, pageNumber }))\n//   }, [pageNumber, keyword, dispatch])\n//   return (\n//     <>\n//       {!keyword &&\n//         (loadingSellers ? (\n//           <LoadingBox></LoadingBox>\n//         ) : errorSellers ? (\n//           <MessageBox variant=\"danger\">{errorSellers}</MessageBox>\n//         ) : (\n//           <Carousel className=\"bg-dark\">\n//             {sellers.map((seller) => (\n//               <Carousel.Item key={seller._id}>\n//                 <Link className=\"seller-image\" to={`/seller/${seller._id}`}>\n//                   <Image\n//                     className=\"seller-image\"\n//                     fuild\n//                     src={seller.seller.logo}\n//                   />\n//                   <Carousel.Caption>\n//                     <h2>{seller.seller.name}</h2>\n//                   </Carousel.Caption>\n//                 </Link>\n//               </Carousel.Item>\n//             ))}\n//           </Carousel>\n//         ))}\n//       {loading ? (\n//         <LoadingBox />\n//       ) : error ? (\n//         <MessageBox variant=\"danger\">{error}</MessageBox>\n//       ) : (\n//         <>\n//           <h1>Featured Products</h1>\n//           <Row>\n//             {products.map((product) => (\n//               <Col key={product._id} sm={12} md={6} lg={3}>\n//                 <Product product={product}></Product>\n//               </Col>\n//             ))}\n//           </Row>\n//           <Pagination>\n//             {[...Array(pages).keys()].map((x) => (\n//               <LinkContainer\n//                 key={x + 1}\n//                 to={\n//                   keyword\n//                     ? `/search/${keyword}/page/${x + 1}`\n//                     : `/page/${x + 1}`\n//                 }\n//               >\n//                 <Pagination.Item active={x + 1 === page}>\n//                   {x + 1}\n//                 </Pagination.Item>\n//               </LinkContainer>\n//             ))}\n//           </Pagination>\n//         </>\n//       )}\n//     </>\n//   )\n// }","map":{"version":3,"names":[],"sources":["C:/Final year project - Copy - Copy/Final year/charity/frontend/src/screens/StartProjectScreen.js"],"sourcesContent":["// import axios from 'axios'\r\n// import { useEffect, useReducer } from 'react'\r\n// import {\r\n//   Col,\r\n//   ListGroup,\r\n//   ListGroupItem,\r\n//   Row,\r\n//   Image,\r\n//   Card,\r\n//   Button,\r\n//   Container,\r\n// } from 'react-bootstrap'\r\n// import { useParams } from 'react-router-dom'\r\n// import ErrorMessageBox from '../components/ErrorMessagebox'\r\n// import Loading from '../components/Loading'\r\n// import { getError } from '../utils'\r\n\r\n// const reducer = (state, action) => {\r\n//   switch (action.type) {\r\n//     case 'FETCH_REQUEST':\r\n//       return { ...state, loading: true }\r\n//     case 'FETCH_SUCCESS':\r\n//       return { ...state, donation: action.payload, loading: false }\r\n//     case 'FETCH_fail':\r\n//       return { ...state, loading: false, error: action.payload }\r\n//     default:\r\n//       return state\r\n//   }\r\n// }\r\n\r\n// function ProjectScreen() {\r\n//   const params = useParams()\r\n//   const { slug } = params\r\n//   const [{ loading, error, donation }, dispatch] = useReducer(reducer, {\r\n//     donation: [],\r\n//     loading: true,\r\n//     error: '',\r\n//   })\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       dispatch({ type: 'FETCH_REQUEST' })\r\n//       try {\r\n//         const result = await axios.get(`/api/project/slug/${slug}`)\r\n//         dispatch({ type: 'FETCH_SUCCESS', payload: result.data })\r\n//       } catch (err) {\r\n//         dispatch({ type: 'FETCH_FAIL', payload: getError(err) })\r\n//       }\r\n//     }\r\n//     fetchData()\r\n//   }, [slug])\r\n\r\n//   return loading ? (\r\n//     <Loading />\r\n//   ) : error ? (\r\n//     <ErrorMessageBox variant=\"danger\">{error}</ErrorMessageBox>\r\n//   ) : (\r\n//     <Container className=\"mt-5\">\r\n//       <Row>\r\n//         <Col md={3}>\r\n//           <Image src={donation.image} alt={donation.name} fluid />\r\n//         </Col>\r\n//         <Col md={6}>\r\n//           <ListGroup variant=\"flush\">\r\n//             <ListGroupItem>\r\n//               <h3>{donation.name}</h3>\r\n//             </ListGroupItem>\r\n//             <ListGroupItem>\r\n//               <h6>\r\n//                 <strong>Location: </strong> {donation.Location}\r\n//               </h6>\r\n//               <h6>\r\n//                 <strong>By: </strong> {donation.by}\r\n//               </h6>\r\n//             </ListGroupItem>\r\n//             <ListGroupItem>\r\n//               <p>\r\n//                 <strong>Description: </strong> {donation.description}\r\n//               </p>\r\n//               <p>\r\n//                 <strong>Challenge:</strong> {donation.Challenge}\r\n//               </p>\r\n//               <p>\r\n//                 <strong>Solution: </strong>\r\n//                 {donation.Solution}\r\n//               </p>\r\n//               <p>\r\n//                 <strong>Longterm Impact:</strong> {donation.LongTermImpact}\r\n//               </p>\r\n//             </ListGroupItem>\r\n//           </ListGroup>\r\n//         </Col>\r\n//         <Col md={3}>\r\n//           <Card>\r\n//             <ListGroup variant=\"flush\">\r\n//               <ListGroupItem>\r\n//                 <h5>Category: {donation.category}</h5>\r\n//               </ListGroupItem>\r\n//               <ListGroupItem>\r\n//                 <div>\r\n//                   Status:{' '}\r\n//                   {donation.donationGoal <= donation.currentdonation\r\n//                     ? 'Donation goal has been completed'\r\n//                     : 'In progress'}\r\n//                 </div>\r\n//               </ListGroupItem>\r\n//               <ListGroupItem>\r\n//                 <div>Donation needed: ${donation.donationGoal}</div>\r\n//                 <div>Collected amount: ${donation.currentdonation}</div>\r\n//               </ListGroupItem>\r\n//               <ListGroupItem>\r\n//                 <Button\r\n//                   className=\"btn-block\"\r\n//                   type=\"button\"\r\n//                   disabled={donation.donationGoal <= donation.currentdonation}\r\n//                 >\r\n//                   Donate\r\n//                 </Button>\r\n//               </ListGroupItem>\r\n//             </ListGroup>\r\n//           </Card>\r\n//         </Col>\r\n//       </Row>\r\n//     </Container>\r\n//   )\r\n// }\r\n// export default ProjectScreen\r\n\r\n// import React, { useEffect } from 'react'\r\n// import { Row, Col, Carousel, Image, Pagination } from 'react-bootstrap'\r\n// import Product from '../components/Product'\r\n// import { useDispatch, useSelector } from 'react-redux'\r\n// import { listProducts } from '../actions/productActions'\r\n// import LoadingBox from '../components/LoadingBox'\r\n// import MessageBox from '../components/MessageBox'\r\n// import { Link, useParams } from 'react-router-dom'\r\n// import { LinkContainer } from 'react-router-bootstrap'\r\n\r\n// export default function StartProjectScreen() {\r\n//   const params = useParams()\r\n//   const keyword = params.keyword\r\n//   const pageNumber = params.pageNumber || 1\r\n//   const dispatch = useDispatch()\r\n//   const productList = useSelector((state) => state.productList)\r\n//   const { products, pages, page, loading, error } = productList\r\n\r\n//   useEffect(() => {\r\n//     dispatch(listProducts({ keyword, pageNumber }))\r\n//   }, [pageNumber, keyword, dispatch])\r\n//   return (\r\n//     <>\r\n//       {!keyword &&\r\n//         (loadingSellers ? (\r\n//           <LoadingBox></LoadingBox>\r\n//         ) : errorSellers ? (\r\n//           <MessageBox variant=\"danger\">{errorSellers}</MessageBox>\r\n//         ) : (\r\n//           <Carousel className=\"bg-dark\">\r\n//             {sellers.map((seller) => (\r\n//               <Carousel.Item key={seller._id}>\r\n//                 <Link className=\"seller-image\" to={`/seller/${seller._id}`}>\r\n//                   <Image\r\n//                     className=\"seller-image\"\r\n//                     fuild\r\n//                     src={seller.seller.logo}\r\n//                   />\r\n//                   <Carousel.Caption>\r\n//                     <h2>{seller.seller.name}</h2>\r\n//                   </Carousel.Caption>\r\n//                 </Link>\r\n//               </Carousel.Item>\r\n//             ))}\r\n//           </Carousel>\r\n//         ))}\r\n\r\n//       {loading ? (\r\n//         <LoadingBox />\r\n//       ) : error ? (\r\n//         <MessageBox variant=\"danger\">{error}</MessageBox>\r\n//       ) : (\r\n//         <>\r\n//           <h1>Featured Products</h1>\r\n//           <Row>\r\n//             {products.map((product) => (\r\n//               <Col key={product._id} sm={12} md={6} lg={3}>\r\n//                 <Product product={product}></Product>\r\n//               </Col>\r\n//             ))}\r\n//           </Row>\r\n//           <Pagination>\r\n//             {[...Array(pages).keys()].map((x) => (\r\n//               <LinkContainer\r\n//                 key={x + 1}\r\n//                 to={\r\n//                   keyword\r\n//                     ? `/search/${keyword}/page/${x + 1}`\r\n//                     : `/page/${x + 1}`\r\n//                 }\r\n//               >\r\n//                 <Pagination.Item active={x + 1 === page}>\r\n//                   {x + 1}\r\n//                 </Pagination.Item>\r\n//               </LinkContainer>\r\n//             ))}\r\n//           </Pagination>\r\n//         </>\r\n//       )}\r\n//     </>\r\n//   )\r\n// }\r\n"],"mappings},"metadata":{},"sourceType":"module"}
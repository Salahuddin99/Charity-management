{"ast":null,"code":"import axios from 'axios';\nimport { //   ORDER_CREATE_REQUEST,\n//   ORDER_CREATE_FAIL,\n//   ORDER_CREATE_SUCCESS,\n//   ORDER_DETAILS_REQUEST,\n//   ORDER_DETAILS_FAIL,\n//   ORDER_DETAILS_SUCCESS,\n//   ORDER_PAY_FAIL,\n//   ORDER_PAY_REQUEST,\n//   ORDER_PAY_SUCCESS,\n//   ORDER_MINE_LIST_FAIL,\n//   ORDER_MINE_LIST_REQUEST,\n//   ORDER_MINE_LIST_SUCCESS,\n//   ORDER_LIST_REQUEST,\n//   ORDER_LIST_SUCCESS,\n//   ORDER_LIST_FAIL,\n//   ORDER_DELIVER_REQUEST,\n//   ORDER_DELIVER_SUCCESS,\n//   ORDER_DELIVER_FAIL,\nCART_SAVE_PAYMENT_METHOD, SAVE_PAYMENT_INFORMATION, PAYMENT_PRODUCT_DETAIL } from '../constants/paymentConstant';\nimport Axios from 'axios'; // export const payOrder =\n//   (order, paymentResult) => async (dispatch, getState) => {\n//     try {\n//       dispatch({ type: ORDER_PAY_REQUEST, payload: paymentResult })\n//       const {\n//         userSignin: { userInfo },\n//       } = getState()\n//       const { data } = await axios.put(\n//         `/api/orders/${order._id}/pay`,\n//         paymentResult,\n//         {\n//           headers: { Authorization: `bearer ${userInfo.token}` },\n//         }\n//       )\n//       dispatch({ type: ORDER_PAY_SUCCESS, payload: data })\n//     } catch (error) {\n//       dispatch({\n//         type: ORDER_PAY_FAIL,\n//         payload:\n//           error.response && error.response.data.message\n//             ? error.response.data.message\n//             : error.message,\n//       })\n//     }\n//   }\n// export const deliverOrder = (order) => async (dispatch, getState) => {\n//   try {\n//     dispatch({ type: ORDER_DELIVER_REQUEST, payload: order })\n//     const {\n//       userSignin: { userInfo },\n//     } = getState()\n//     const { data } = await axios.put(\n//       `/api/orders/${order._id}/deliver`,\n//       {},\n//       {\n//         headers: { Authorization: `bearer ${userInfo.token}` },\n//       }\n//     )\n//     dispatch({ type: ORDER_DELIVER_SUCCESS, payload: data })\n//   } catch (error) {\n//     dispatch({\n//       type: ORDER_DELIVER_FAIL,\n//       payload:\n//         error.response && error.response.data.message\n//           ? error.response.data.message\n//           : error.message,\n//     })\n//   }\n// }\n// export const listOrdersMine = () => async (dispatch, getState) => {\n//   try {\n//     dispatch({ type: ORDER_MINE_LIST_REQUEST })\n//     const {\n//       userSignin: { userInfo },\n//     } = getState()\n//     const { data } = await axios.get('/api/orders/mine', {\n//       headers: { Authorization: `bearer ${userInfo.token}` },\n//     })\n//     dispatch({ type: ORDER_MINE_LIST_SUCCESS, payload: data })\n//   } catch (error) {\n//     dispatch({\n//       type: ORDER_MINE_LIST_FAIL,\n//       payload:\n//         error.response && error.response.data.message\n//           ? error.response.data.message\n//           : error.message,\n//     })\n//   }\n// }\n// export const listOrders =\n//   ({ seller = '' }) =>\n//   async (dispatch, getState) => {\n//     try {\n//       dispatch({ type: ORDER_LIST_REQUEST })\n//       const {\n//         userSignin: { userInfo },\n//       } = getState()\n//       const { data } = await axios.get(`/api/orders?seller=${seller}`, {\n//         headers: { Authorization: `bearer ${userInfo.token}` },\n//       })\n//       dispatch({ type: ORDER_LIST_SUCCESS, payload: data })\n//     } catch (error) {\n//       dispatch({\n//         type: ORDER_LIST_FAIL,\n//         payload:\n//           error.response && error.response.data.message\n//             ? error.response.data.message\n//             : error.message,\n//       })\n//     }\n//   }\n// export const detailsOrder = (orderId) => async (dispatch, getState) => {\n//   try {\n//     dispatch({ type: ORDER_DETAILS_REQUEST, payload: orderId })\n//     const {\n//       userSignin: { userInfo },\n//     } = getState()\n//     const { data } = await Axios.get(`/api/orders/${orderId}`, {\n//       headers: {\n//         Authorization: `Bearer ${userInfo.token}`,\n//       },\n//     })\n//     dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data })\n//   } catch (error) {\n//     dispatch({\n//       type: ORDER_DETAILS_FAIL,\n//       payload:\n//         error.response && error.response.data.message\n//           ? error.response.data.message\n//           : error.message,\n//     })\n//   }\n// }\n// export const createOrder = (order) => async (dispatch, getState) => {\n//   try {\n//     dispatch({ type: ORDER_CREATE_REQUEST, payload: order })\n//     const {\n//       userSignin: { userInfo },\n//     } = getState()\n//     const { data } = await axios.post('/api/orders', order, {\n//       headers: {\n//         Authorization: `Bearer ${userInfo.token}`,\n//       },\n//     })\n//     dispatch({ type: ORDER_CREATE_SUCCESS, payload: data.order })\n//     localStorage.removeItem('cartItems')\n//   } catch (error) {\n//     dispatch({\n//       type: ORDER_CREATE_FAIL,\n//       payload:\n//         error.response && error.response.data.message\n//           ? error.response.data.message\n//           : error.message,\n//     })\n//   }\n// }\n\nexport const savePaymentInformation = data => dispatch => {\n  dispatch({\n    type: SAVE_PAYMENT_INFORMATION,\n    payload: data\n  });\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\n};\nexport const paymentProductdetail = projectId => async (dispatch, getState) => {\n  const {\n    data\n  } = await Axios.get(`/api/projects/${projectId}`);\n  dispatch({\n    type: PAYMENT_PRODUCT_DETAIL,\n    payload: {\n      project: data._id,\n      name: data.name,\n      nGO: data.nGO._id,\n      image: data.image,\n      category: data.category\n    }\n  });\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\nexport const savePaymentMethod = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data\n  });\n  localStorage.setItem('paymentMethod', JSON.stringify(data));\n};","map":{"version":3,"names":["axios","CART_SAVE_PAYMENT_METHOD","SAVE_PAYMENT_INFORMATION","PAYMENT_PRODUCT_DETAIL","Axios","savePaymentInformation","data","dispatch","type","payload","localStorage","setItem","JSON","stringify","paymentProductdetail","projectId","getState","get","project","_id","name","nGO","image","category","cart","cartItems","savePaymentMethod"],"sources":["C:/Final year project - Copy - Copy/Final year/charity/frontend/src/actions/paymentAction.js"],"sourcesContent":["import axios from 'axios'\r\nimport {\r\n  //   ORDER_CREATE_REQUEST,\r\n  //   ORDER_CREATE_FAIL,\r\n  //   ORDER_CREATE_SUCCESS,\r\n  //   ORDER_DETAILS_REQUEST,\r\n  //   ORDER_DETAILS_FAIL,\r\n  //   ORDER_DETAILS_SUCCESS,\r\n  //   ORDER_PAY_FAIL,\r\n  //   ORDER_PAY_REQUEST,\r\n  //   ORDER_PAY_SUCCESS,\r\n  //   ORDER_MINE_LIST_FAIL,\r\n  //   ORDER_MINE_LIST_REQUEST,\r\n  //   ORDER_MINE_LIST_SUCCESS,\r\n  //   ORDER_LIST_REQUEST,\r\n  //   ORDER_LIST_SUCCESS,\r\n  //   ORDER_LIST_FAIL,\r\n  //   ORDER_DELIVER_REQUEST,\r\n  //   ORDER_DELIVER_SUCCESS,\r\n  //   ORDER_DELIVER_FAIL,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  SAVE_PAYMENT_INFORMATION,\r\n  PAYMENT_PRODUCT_DETAIL,\r\n} from '../constants/paymentConstant'\r\nimport Axios from 'axios'\r\n\r\n// export const payOrder =\r\n//   (order, paymentResult) => async (dispatch, getState) => {\r\n//     try {\r\n//       dispatch({ type: ORDER_PAY_REQUEST, payload: paymentResult })\r\n//       const {\r\n//         userSignin: { userInfo },\r\n//       } = getState()\r\n//       const { data } = await axios.put(\r\n//         `/api/orders/${order._id}/pay`,\r\n//         paymentResult,\r\n//         {\r\n//           headers: { Authorization: `bearer ${userInfo.token}` },\r\n//         }\r\n//       )\r\n//       dispatch({ type: ORDER_PAY_SUCCESS, payload: data })\r\n//     } catch (error) {\r\n//       dispatch({\r\n//         type: ORDER_PAY_FAIL,\r\n//         payload:\r\n//           error.response && error.response.data.message\r\n//             ? error.response.data.message\r\n//             : error.message,\r\n//       })\r\n//     }\r\n//   }\r\n\r\n// export const deliverOrder = (order) => async (dispatch, getState) => {\r\n//   try {\r\n//     dispatch({ type: ORDER_DELIVER_REQUEST, payload: order })\r\n//     const {\r\n//       userSignin: { userInfo },\r\n//     } = getState()\r\n//     const { data } = await axios.put(\r\n//       `/api/orders/${order._id}/deliver`,\r\n//       {},\r\n//       {\r\n//         headers: { Authorization: `bearer ${userInfo.token}` },\r\n//       }\r\n//     )\r\n//     dispatch({ type: ORDER_DELIVER_SUCCESS, payload: data })\r\n//   } catch (error) {\r\n//     dispatch({\r\n//       type: ORDER_DELIVER_FAIL,\r\n//       payload:\r\n//         error.response && error.response.data.message\r\n//           ? error.response.data.message\r\n//           : error.message,\r\n//     })\r\n//   }\r\n// }\r\n\r\n// export const listOrdersMine = () => async (dispatch, getState) => {\r\n//   try {\r\n//     dispatch({ type: ORDER_MINE_LIST_REQUEST })\r\n//     const {\r\n//       userSignin: { userInfo },\r\n//     } = getState()\r\n//     const { data } = await axios.get('/api/orders/mine', {\r\n//       headers: { Authorization: `bearer ${userInfo.token}` },\r\n//     })\r\n//     dispatch({ type: ORDER_MINE_LIST_SUCCESS, payload: data })\r\n//   } catch (error) {\r\n//     dispatch({\r\n//       type: ORDER_MINE_LIST_FAIL,\r\n//       payload:\r\n//         error.response && error.response.data.message\r\n//           ? error.response.data.message\r\n//           : error.message,\r\n//     })\r\n//   }\r\n// }\r\n\r\n// export const listOrders =\r\n//   ({ seller = '' }) =>\r\n//   async (dispatch, getState) => {\r\n//     try {\r\n//       dispatch({ type: ORDER_LIST_REQUEST })\r\n//       const {\r\n//         userSignin: { userInfo },\r\n//       } = getState()\r\n//       const { data } = await axios.get(`/api/orders?seller=${seller}`, {\r\n//         headers: { Authorization: `bearer ${userInfo.token}` },\r\n//       })\r\n//       dispatch({ type: ORDER_LIST_SUCCESS, payload: data })\r\n//     } catch (error) {\r\n//       dispatch({\r\n//         type: ORDER_LIST_FAIL,\r\n//         payload:\r\n//           error.response && error.response.data.message\r\n//             ? error.response.data.message\r\n//             : error.message,\r\n//       })\r\n//     }\r\n//   }\r\n\r\n// export const detailsOrder = (orderId) => async (dispatch, getState) => {\r\n//   try {\r\n//     dispatch({ type: ORDER_DETAILS_REQUEST, payload: orderId })\r\n//     const {\r\n//       userSignin: { userInfo },\r\n//     } = getState()\r\n//     const { data } = await Axios.get(`/api/orders/${orderId}`, {\r\n//       headers: {\r\n//         Authorization: `Bearer ${userInfo.token}`,\r\n//       },\r\n//     })\r\n//     dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data })\r\n//   } catch (error) {\r\n//     dispatch({\r\n//       type: ORDER_DETAILS_FAIL,\r\n//       payload:\r\n//         error.response && error.response.data.message\r\n//           ? error.response.data.message\r\n//           : error.message,\r\n//     })\r\n//   }\r\n// }\r\n\r\n// export const createOrder = (order) => async (dispatch, getState) => {\r\n//   try {\r\n//     dispatch({ type: ORDER_CREATE_REQUEST, payload: order })\r\n//     const {\r\n//       userSignin: { userInfo },\r\n//     } = getState()\r\n//     const { data } = await axios.post('/api/orders', order, {\r\n//       headers: {\r\n//         Authorization: `Bearer ${userInfo.token}`,\r\n//       },\r\n//     })\r\n//     dispatch({ type: ORDER_CREATE_SUCCESS, payload: data.order })\r\n//     localStorage.removeItem('cartItems')\r\n//   } catch (error) {\r\n//     dispatch({\r\n//       type: ORDER_CREATE_FAIL,\r\n//       payload:\r\n//         error.response && error.response.data.message\r\n//           ? error.response.data.message\r\n//           : error.message,\r\n//     })\r\n//   }\r\n// }\r\n\r\nexport const savePaymentInformation = (data) => (dispatch) => {\r\n  dispatch({ type: SAVE_PAYMENT_INFORMATION, payload: data })\r\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const paymentProductdetail =\r\n  (projectId) => async (dispatch, getState) => {\r\n    const { data } = await Axios.get(`/api/projects/${projectId}`)\r\n    dispatch({\r\n      type: PAYMENT_PRODUCT_DETAIL,\r\n      payload: {\r\n        project: data._id,\r\n        name: data.name,\r\n        nGO: data.nGO._id,\r\n        image: data.image,\r\n        category: data.category,\r\n      },\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n  }\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({ type: CART_SAVE_PAYMENT_METHOD, payload: data })\r\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,wBAnBF,EAoBEC,wBApBF,EAqBEC,sBArBF,QAsBO,8BAtBP;AAuBA,OAAOC,KAAP,MAAkB,OAAlsBAAsB,GAAIC,IAAD,IAAWC,QAAD,IAAc;EAC5DA,QAAQ,CAAC;IAAEC,IAAI,EAAEN,wBAAR;IAAkCO,OAAO,EAAEH;EAA3C,CAAD,CAAR;EACAI,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwCC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAxC;AACD,CAHM;AAKP,OAAO,MAAMQ,oBAAoB,GAC9BC,SAAD,IAAe,OAAOR,QAAP,EAAiBS,QAAjB,KAA8B;EAC3C,MAAM;IAAEV;EAAF,IAAW,MAAMF,KAAK,CAACa,GAAN,CAAW,iBAAgBF,SAAU,EAArC,CAAvB;EACAR,QAAQ,CAAC;IACPC,IAAI,EAAEL,sBADC;IAEPM,OAAO,EAAE;MACPS,OAAO,EAAEZ,IAAI,CAACa,GADP;MAEPC,IAAI,EAAEd,IAAI,CAACc,IAFJ;MAGPC,GAAG,EAAEf,IAAI,CAACe,GAAL,CAASF,GAHP;MAIPG,KAAK,EAAEhB,IAAI,CAACgB,KAJL;MAKPC,QAAQ,EAAEjB,IAAI,CAACiB;IALR;EAFF,CAAD,CAAR;EAUAb,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAeG,QAAQ,GAAGQ,IAAX,CAAgBC,SAA/B,CAAlC;AACD,CAdI;AAgBP,OAAO,MAAMC,iBAAiB,GAAIpB,IAAD,IAAWC,QAAD,IAAc;EACvDA,QAAQ,CAAC;IAAEC,IAAI,EAAEP,wBAAR;IAAkCQ,OAAO,EAAEH;EAA3C,CAAD,CAAR;EACAI,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAtC;AACD,CAHM"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import axios from 'axios'; //import Cookie from 'js-cookie'\n\nimport { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_LOGOUT //   USER_UPDATE_REQUEST,\n//   USER_UPDATE_SUCCESS,\n//   USER_UPDATE_FAIL,\n} from '../constants/userConstant'; // const update =\n//   ({ userId, name, email, password }) =>\n//   async (dispatch, getState) => {\n//     const {\n//       userSignin: { userInfo },\n//     } = getState()\n//     dispatch({\n//       type: USER_UPDATE_REQUEST,\n//       payload: { userId, name, email, password },\n//     })\n//     try {\n//       const { data } = await Axios.put(\n//         '/api/users/' + userId,\n//         { name, email, password },\n//         {\n//           headers: {\n//             Authorization: 'Bearer ' + userInfo.token,\n//           },\n//         }\n//       )\n//       dispatch({ type: USER_UPDATE_SUCCESS, payload: data })\n//       Cookie.set('userInfo', JSON.stringify(data))\n//     } catch (error) {\n//       dispatch({ type: USER_UPDATE_FAIL, payload: error.message })\n//     }\n//   }\n\nconst login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\nconst register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      name,\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await axios.post('/api/users', {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\n\nexport { login, logout //register, //update\n};","map":{"version":3,"names":["axios","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_LOGOUT","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","register","name","Cookie","set","logout","removeItem"],"sources":["C:/Final year project - Copy - Copy/Final year/charity/frontend/src/actions/userAction.js"],"sourcesContent":["import axios from 'axios'\r\n//import Cookie from 'js-cookie'\r\nimport {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_LOGOUT,\r\n  //   USER_UPDATE_REQUEST,\r\n  //   USER_UPDATE_SUCCESS,\r\n  //   USER_UPDATE_FAIL,\r\n} from '../constants/userConstant'\r\n\r\n// const update =\r\n//   ({ userId, name, email, password }) =>\r\n//   async (dispatch, getState) => {\r\n//     const {\r\n//       userSignin: { userInfo },\r\n//     } = getState()\r\n//     dispatch({\r\n//       type: USER_UPDATE_REQUEST,\r\n//       payload: { userId, name, email, password },\r\n//     })\r\n//     try {\r\n//       const { data } = await Axios.put(\r\n//         '/api/users/' + userId,\r\n//         { name, email, password },\r\n//         {\r\n//           headers: {\r\n//             Authorization: 'Bearer ' + userInfo.token,\r\n//           },\r\n//         }\r\n//       )\r\n//       dispatch({ type: USER_UPDATE_SUCCESS, payload: data })\r\n//       Cookie.set('userInfo', JSON.stringify(data))\r\n//     } catch (error) {\r\n//       dispatch({ type: USER_UPDATE_FAIL, payload: error.message })\r\n//     }\r\n//   }\r\n\r\nconst login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REQUEST })\r\n    const config = { headers: { 'Content-Type': 'application/json' } }\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      { email, password },\r\n      config\r\n    )\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data })\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nconst register = (name, email, password) => async (dispatch) => {\r\n  dispatch({ type: USER_REGISTER_REQUEST, payload: { name, email, password } })\r\n  try {\r\n    const { data } = await axios.post('/api/users', {\r\n      name,\r\n      email,\r\n      password,\r\n    })\r\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data })\r\n    Cookie.set('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({ type: USER_REGISTER_FAIL, payload: error.message })\r\n  }\r\n}\r\n\r\nconst logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo')\r\n  dispatch({ type: USER_LOGOUT })\r\n}\r\nexport {\r\n  login,\r\n  logout, //register, //update\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SACEC,kBADF,EAEEC,kBAFF,EAGEC,eAHF,EAIEC,qBAJF,EAKEC,qBALF,EAMEC,kBANF,EAOEC,WAPF,CAQE;AACA;AACA;AAVF,OAWO,2BAXP,C,CAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;EACrD,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAEX;IAAR,CAAD,CAAR;IACA,MAAMY,MAAM,GAAG;MAAEC,OAAO,EAAE;QAAE,gBAAgB;MAAlB;IAAX,CAAf;IACA,MAAM;MAAEC;IAAF,IAAW,MAAMf,KAAK,CAACgB,IAAN,CACrB,kBADqB,EAErB;MAAEP,KAAF;MAASC;IAAT,CAFqB,EAGrBG,MAHqB,CAAvB;IAKAF,QAAQ,CAAC;MAAEC,IAAI,EAAEV,kBAAR;MAA4Be,OAAO,EAAEF;IAArC,CAAD,CAAR;IACAG,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAjC;EACD,CAVD,CAUE,OAAOO,KAAP,EAAc;IACdX,QAAQ,CAAC;MACPC,IAAI,EAAET,eADC;MAEPc,OAAO,EACLK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADxB,GAEIF,KAAK,CAACE;IALL,CAAD,CAAR;EAOD;AACF,CApBD;;AAsBA,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOjB,KAAP,EAAcC,QAAd,KAA2B,MAAOC,QAAP,IAAoB;EAC9DA,QAAQ,CAAC;IAAEC,IAAI,EAAER,qBAAR;IAA+Ba,OAAO,EAAE;MAAES,IAAF;MAAQjB,KAAR;MAAeC;IAAf;EAAxC,CAAD,CAAR;;EACA,IAAI;IACF,MAAM;MAAEK;IAAF,IAAW,MAAMf,KAAK,CAACgB,IAAN,CAAW,YAAX,EAAyB;MAC9CU,IAD8C;MAE9CjB,KAF8C;MAG9CC;IAH8C,CAAzB,CAAvB;IAKAC,QAAQ,CAAC;MAAEC,IAAI,EAAEP,qBAAR;MAA+BY,OAAO,EAAEF;IAAxC,CAAD,CAAR;IACAY,MAAM,CAACC,GAAP,CAAW,UAAX,EAAuBR,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAvB;EACD,CARD,CAQE,OAAOO,KAAP,EAAc;IACdX,QAAQ,CAAC;MAAEC,IAAI,EAAEN,kBAAR;MAA4BW,OAAO,EAAEK,KAAK,CAACE;IAA3C,CAAD,CAAR;EACD;AACF,CAbD;;AAeA,MAAMK,MAAM,GAAG,MAAOlB,QAAD,IAAc;EACjCO,YAAY,CAACY,UAAb,CAAwB,UAAxB;EACAnB,QAAQ,CAAC;IAAEC,IAAI,EAAEL;EAAR,CAAD,CAAR;AACD,CAHD;;AAIA,SACEC,KADF,EAEEqB,MAFF,CAEU;AAFV"},"metadata":{},"sourceType":"module"}